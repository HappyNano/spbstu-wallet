name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: ./scripts/install.sh

      - name: Configure
        run: |
          mkdir build
          cmake -B build -S . -DCMAKE_PROJECT_TOP_LEVEL_INCLUDES=cmake/conan_install.cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=yes

      - name: Build
        run: |
          cd build
          cmake --build .
        
      - name: Tar files
        run: |
          tar -cvf build.tar build/
          tar -rf build.tar -C $HOME .conan2/
      - name: Save build folder
        uses: actions/upload-artifact@v4
        with:
          name: built
          path: build.tar
          retention-days: 1

  static-analyzing:

    needs: build

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download built folders
        uses: actions/download-artifact@v4
        with:
          name: built
      - name: Untar files
        run: tar -xvf build.tar
      - name: Move conan directory
        run: mv .conan2 $HOME/.conan2

      - name: Linter checks
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          database: 'build/'
          style: file
          tidy-checks: ''
          files-changed-only: false
      - name: Fail fast?!
        if: steps.linter.outputs.checks-failed > 0
        run: |
          echo "some linter checks failed. ${{ steps.linter.outputs.checks-failed }}"
          exit 1

  unit-tests:

    needs: build
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download built folders
        uses: actions/download-artifact@v4
        with:
          name: built
      - name: Untar files
        run: tar -xvf build.tar

      - name: Run tests
        run: |
          cd build
          ctest
